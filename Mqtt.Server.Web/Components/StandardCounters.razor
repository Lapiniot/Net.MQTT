@using System.Diagnostics
@using System.Globalization
@inherits PeriodicRefreshComponent

<h6>Runtime</h6>
<div class="grid grid-auto-40 gap-3 mb-6">
    @RenderCard("CPU Usage", listener.CpuUsage, "P1")
    @RenderCard("Working Set", listener.WorkingSet.ToString("N2"), "{0} MB")
    @RenderCard("GC Heap Size", listener.GcHeapSize.ToString("N2"), "{0} MB")
    @if (!@collapsed)
    {
        @RenderCard("Gen 0 Size", listener.Gen0Size.ToString("N2"), "{0} B")
        @RenderCard("Gen 1 Size", listener.Gen1Size.ToString("N2"), "{0} B")
        @RenderCard("Gen 2 Size", listener.Gen2Size.ToString("N2"), "{0} B")
        @RenderCard("Gen 0 GC Count", listener.Gen0GcCount, "N0")
        @RenderCard("Gen 1 GC Count", listener.Gen1GcCount, "N0")
        @RenderCard("Gen 2 GC Count", listener.Gen2GcCount, "N0")
        @RenderCard("ThreadPool Thread Count", listener.ThreadPoolThreadCount, "N0")
        @RenderCard("ThreadPool Queue Length", listener.ThreadPoolQueueLength, "N0")
        @RenderCard("ThreadPool Completed Work Item Count", listener.ThreadPoolCompletedItemsCount, "N0")
    }
    <div class="flex items-center">
        <button class="btn link-success" @onclick="() => collapsed = !collapsed">
            @(collapsed ? "More ..." : "Less ...")
        </button>
    </div>
</div>

@code {
    private OOs.Diagnostics.RuntimeCountersListener listener = new();
    private bool collapsed = true;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        listener.Start();
    }

    protected override void Dispose(bool disposing)
    {
        base.Dispose(disposing);
        listener.Dispose();
    }

    private RenderFragment RenderCard<T>(string header, T value, string format) where T : IFormattable =>
        @<div class="border-1 border-zinc-200 p-2 rounded-sm bg-gray-50 text-truncate" title="@header">
            <h6 class="text-truncate">@header</h6>
            @value.ToString(format, CultureInfo.CurrentUICulture)
        </div>;

    private RenderFragment RenderCard(string header, string value, string format) =>
        @<div class="border-1 border-zinc-200 p-2 rounded-sm bg-gray-50 text-truncate" title="@header">
            <h6 class="text-truncate">@header</h6>
            @string.Format(CultureInfo.CurrentUICulture, format, value)
        </div>;
}